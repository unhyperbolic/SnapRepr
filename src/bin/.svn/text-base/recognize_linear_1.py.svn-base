#!/usr/bin/python

import os
import sys
import re
import optparse
import traceback
import csv

this_path, this_file = os.path.split(sys.argv[0])
abs_path = os.path.abspath(this_path)
base_path, this_dir = os.path.split(abs_path)
sys.path.append(base_path)

try:
    from manifold.triangulation import triangulation, read_triangulation_from_file
    from algebra.polynomial import polynomial
    from algebra.pari import number, set_pari_precision, set_pari_allowed_error, get_pari_allowed_error, NumericalError
    from algebra.solve_polynomial_equations import solve_polynomial_equations
    import manifold.slN
    import algebra.magma
    import algebra.pari
    import hashlib
except ImportError as e:
    print e
    print
    print "This program was called as       :", sys.argv[0]
    print "Absolute path to this program is :", abs_path
    print "Base path is                     :", base_path
    sys.exit(1)

if not len(sys.argv)==4:
    print "Usage: recognize_linear_1 census_volumes.csv representation_volumes.csv linear_combinations.csv"
    sys.exit(1)

CensusVolumesReader = csv.DictReader(open(sys.argv[1],'rb'))

CensusVolumesDict = []

for d in CensusVolumesReader:
    d['Volume'] = number(d['Volume'])
    d['Tetrahedra'] = int(d['Tetrahedra'])
    CensusVolumesDict.append(d)

CensusVolumesDict.sort(key = lambda d: d['Volume'])

RepresentationHeader = csv.reader(open(sys.argv[2],'rb')).next()

RepresentationReader = csv.DictReader(open(sys.argv[2],'rb'))

OutWriter = csv.DictWriter(open(sys.argv[3],'wb'),RepresentationHeader + ['Linear Combinations'])

for d in RepresentationReader:
    d['Linear Combinations'] = '-'
    if not d['Volume'] == '-':
        v = number(d['Volume'])
        vfloat = float(d['Volume'])
        if vfloat > 1e-10:
            print vfloat, v

    OutWriter.writerow(d)

